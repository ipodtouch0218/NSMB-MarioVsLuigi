<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Assembly-CSharp</name>
    </assembly>
    <members>
        <member name="T:PlayerSpawnerPrototype">
            <summary>
            Prototyping component for spawning Player avatars.
            </summary>
        </member>
        <member name="F:FusionGraphBase._statSourceType">
            <summary>
            Which section of the Fusion engine is being monitored. In combination with StatId, this selects the stat being monitored.
            </summary>
        </member>
        <member name="F:FusionGraphBase._statId">
            <summary>
            The specific stat being monitored.
            </summary>
        </member>
        <member name="F:SpawnerPrototype`1.PlayerPrefab">
            <summary>
            Reference to the Prefab which will be used for spawning.
            </summary>
        </member>
        <member name="F:SpawnerPrototype`1.SpawnMethod">
            <summary>
            Selects if spawning will be automatic, or explicitly with user script.
            </summary>
        </member>
        <member name="F:SpawnerPrototype`1.StateAuthority">
            <summary>
            This allows players to be spawned with Player StateAuthority. Only applicable to Shared Mode.
            </summary>
        </member>
        <member name="F:Fusion.NetworkSceneManagerBase.ShowHierarchyWindowOverlay">
            <summary>
            When enabled, a small info button overlays will be added to the Hierarchy Window 
            for each active <see cref="T:Fusion.NetworkRunner"/> and for its associated scene.
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.UseGlobalPrefix">
            <summary>
            If true, all messages will be prefixed with [Fusion] tag
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.UseColorTags">
            <summary>
            If true, some parts of messages will be enclosed with &lt;color&gt; tags.
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.GlobalPrefixColor">
            <summary>
            Color of the global prefix (see <see cref="F:Fusion.FusionUnityLogger.UseGlobalPrefix"/>).
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.MinRandomColor">
            <summary>
            Min Random Color
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.MaxRandomColor">
            <summary>
            Max Random Color
            </summary>
        </member>
        <member name="F:Fusion.FusionUnityLogger.ServerColor">
            <summary>
            Server Color
            </summary>
        </member>
        <member name="P:Fusion.FusionUnityLogger.GetColor">
            <summary>
            Converts object to a color <see cref="F:Fusion.FusionUnityLogger.UseColorTags"/>. By default works only for <see cref="T:Fusion.NetworkRunner"/> and uses <see cref="F:Fusion.FusionUnityLogger.MinRandomColor"/> and <see cref="F:Fusion.FusionUnityLogger.MaxRandomColor"/> fields.
            </summary>
        </member>
        <member name="M:Fusion.Editor.BoundsTools.CollectMyBounds(UnityEngine.GameObject,Fusion.Editor.BoundsTools.BoundsType,System.Int32@,System.Boolean,System.Boolean)">
            <summary>
            Collect the bounds of the indicated types (MeshRenderer and/or Collider) on the object and all of its children, and returns bounds that are a sum of all of those.
            </summary>
            <param name="go">GameObject to start search from.</param>
            <param name="factorIn">The types of bounds to factor in.</param>
            <param name="includeChildren">Whether to search all children for bounds.</param>
            <returns></returns>
        </member>
        <member name="P:NetworkCharacterControllerPrototype.DefaultTeleportInterpolationVelocity">
            <summary>
            Sets the default teleport interpolation velocity to be the CC's current velocity.
            For more details on how this field is used, see <see cref="M:Fusion.NetworkTransform.TeleportToPosition(UnityEngine.Vector3,System.Nullable{UnityEngine.Vector3},System.Boolean)"/>.
            </summary>
        </member>
        <member name="P:NetworkCharacterControllerPrototype.DefaultTeleportInterpolationAngularVelocity">
            <summary>
            Sets the default teleport interpolation angular velocity to be the CC's rotation speed on the Z axis.
            For more details on how this field is used, see <see cref="M:Fusion.NetworkTransform.TeleportToRotation(UnityEngine.Quaternion,System.Nullable{UnityEngine.Vector3},System.Boolean)"/>.
            </summary>
        </member>
        <member name="M:NetworkCharacterControllerPrototype.Jump(System.Boolean,System.Nullable{System.Single})">
            <summary>
            Basic implementation of a jump impulse (immediately integrates a vertical component to Velocity).
            <param name="ignoreGrounded">Jump even if not in a grounded state.</param>
            <param name="overrideImpulse">Optional field to override the jump impulse. If null, <see cref="F:NetworkCharacterControllerPrototype.jumpImpulse"/> is used.</param>
            </summary>
        </member>
        <member name="M:NetworkCharacterControllerPrototype.Move(UnityEngine.Vector3)">
            <summary>
            Basic implementation of a character controller's movement function based on an intended direction.
            <param name="direction">Intended movement direction, subject to movement query, acceleration and max speed values.</param>
            </summary>
        </member>
        <member name="T:FusionStatsBillboard">
            <summary>
            Companion component for <see cref="T:FusionStats"/>, which automatically faces this GameObject toward the supplied Camera. If Camera == null, will face towards Camera.main.
            </summary>
        </member>
        <member name="F:FusionStatsBillboard.Camera">
            <summary>
            Force a particular camera to billboard this object toward. Leave null to use Camera.main.
            </summary>
        </member>
        <member name="T:ISpawnPointPrototype">
            <summary>
            Flag interface to identify GameObjects that should be used as markers for spawn points. 
            Used by <see cref="!:ISpawnPointManagerPrototype"/> to locate spawn points in a scene.
            </summary>
        </member>
        <member name="F:FusionStatsMeterBar.MeterMax">
            <summary>
            Values greater than 0 will limit the meter to a range of 0 to MeterMax.
            Value of 0 will adjust the max to the largest value occurance.
            </summary>
        </member>
        <member name="F:FusionStatsMeterBar._showUITargets">
            <summary>
            Exposes the UI labels and controls of <see cref="T:FusionGraph"/>, so they may be modified if customizing this graph.
            </summary>
        </member>
        <member name="T:InputBehaviourPrototype">
            <summary>
            A simple example of Fusion input collection. This component should be on the same GameObject as the <see cref="T:Fusion.NetworkRunner"/>.
            </summary>
        </member>
        <member name="T:NetworkInputPrototype">
            <summary>
            Example definition of an INetworkStruct.
            </summary>
        </member>
        <member name="T:SpawnPointManagerPrototype`1">
            <summary>
            Derive from this class for different <see cref="T:ISpawnPointPrototype"/> types. 
            Derived manager will only find that spawn point type, allowing for separate handling of player spawn points from other spawn-able items such as AI.
            </summary>
            <typeparam name="T"></typeparam>
        </member>
        <member name="F:SpawnPointManagerPrototype`1.Sequence">
            <summary>
            How spawn points will be selected from the <see cref="F:SpawnPointManagerPrototype`1._spawnPoints"/> collection.
            </summary>
        </member>
        <member name="F:SpawnPointManagerPrototype`1.BlockingLayers">
            <summary>
            LayerMask for which physics layers should be used for blocked spawn point checks.
            </summary>
        </member>
        <member name="F:SpawnPointManagerPrototype`1.BlockedCheckRadius">
            <summary>
            The search radius used for detecting if a spawn point is blocked by an object.
            </summary>
        </member>
        <member name="F:SpawnPointManagerPrototype`1._spawnPoints">
            <summary>
            Serialized collection of all <see cref="T:ISpawnPointPrototype"/> of the type T found in the same scene as this component.
            </summary>
        </member>
        <member name="M:SpawnPointManagerPrototype`1.CollectSpawnPoints(Fusion.NetworkRunner)">
            <summary>
            Find all <see cref="T:ISpawnPointPrototype"/> instances in the same scene as this spawner. 
            This should only be done at development time if using the Photon relay for any spawn logic.
            </summary>
        </member>
        <member name="M:SpawnPointManagerPrototype`1.GetNextSpawnPoint(Fusion.NetworkRunner,Fusion.PlayerRef,System.Boolean)">
            <summary>
            Select the next spawn point using the defined <see cref="F:SpawnPointManagerPrototype`1.Sequence"/>. Override this method to expand on this, such as detecting if a spawn point is blocked.
            </summary>
        </member>
        <member name="M:SpawnPointManagerPrototype`1.AllSpawnPointsBlockedFallback">
            <summary>
            Handling for if all spawn points are blocked.
            </summary>
            <returns></returns>
        </member>
        <member name="M:SpawnPointManagerPrototype`1.GetNextUnblocked(System.Int32)">
            <summary>
            Cycles through all remaining spawn points searching for unblocked. Will return null if all points return <see cref="!:IsBlocked(Transform)"/> == true.
            </summary>
            <param name="failedIndex">The index of the first tried SpawnPoints[] element, which was blocked.</param>
            <returns>(<see cref="F:SpawnPointManagerPrototype`1._spawnPoints"/> index, <see cref="T:ISpawnPointPrototype"/>)</returns>
        </member>
        <member name="M:SpawnPointManagerPrototype`1.IsBlocked(UnityEngine.Component)">
            <summary>
            Override this method with any logic for checking if a spawn point is blocked.
            </summary>
            <param name="spawnPoint"></param>
            <returns></returns>
        </member>
        <member name="T:ISpawnPointManagerPrototype`1">
            <summary>
            Interface for <see cref="T:SpawnPointManagerPrototype`1"/> behaviours.
            </summary>
        </member>
        <member name="T:PlayerSpawnPointPrototype">
            <summary>
            Flag component to identify GameObjects that should be used as markers for spawn points.
            </summary>
        </member>
        <member name="T:PlayerAOIPrototype">
            <summary>
            Prototyping component for Fusion. Updates the Player's AOI every tick to be a radius around this object.
            </summary>
        </member>
        <member name="F:PlayerAOIPrototype.DrawAreaOfInterestRadius">
            <summary>
            Enables the widget which shows the current AOI radius for this object in the scene window.
            </summary>
        </member>
        <member name="F:PlayerAOIPrototype.Radius">
            <summary>
            Radius around this GameObject that defines the Area Of Interest for the InputAuthority of the object.
            The InputAuthority player of this <see cref="T:Fusion.NetworkObject"/>, 
            will receive updates for any other <see cref="T:Fusion.NetworkObject"/> within this radius. 
            </summary>
        </member>
        <member name="T:FusionStats">
            <summary>
            Creates and controls a Canvas with one or multiple telemetry graphs. Can be created as a scene object or prefab,
            or be created at runtime using the <see cref="M:FusionStats.Create(UnityEngine.Transform,Fusion.NetworkRunner,System.Nullable{FusionStats.DefaultLayouts},System.Nullable{FusionStats.DefaultLayouts},System.Nullable{Fusion.Simulation.Statistics.NetStatFlags},System.Nullable{Fusion.Simulation.Statistics.SimStatFlags})"/> methods. If created as the child of a <see cref="T:Fusion.NetworkObject"/>
            then <see cref="P:FusionStats.EnableObjectStats"/> will automatically be set to true.
            </summary>
        </member>
        <member name="T:FusionStats.StatCanvasTypes">
            <summary>
            Options for displaying stats as screen overlays or world GameObjects.
            </summary>
        </member>
        <member name="T:FusionStats.DefaultLayouts">
            <summary>
            Predefined layout default options.
            </summary>
        </member>
        <member name="M:FusionStats.Create(UnityEngine.Transform,Fusion.NetworkRunner,System.Nullable{FusionStats.DefaultLayouts},System.Nullable{FusionStats.DefaultLayouts},System.Nullable{Fusion.Simulation.Statistics.NetStatFlags},System.Nullable{Fusion.Simulation.Statistics.SimStatFlags})">
            <summary>
            Creates a new GameObject with a <see cref="T:FusionStats"/> component, attaches it to any supplied parent, and generates Canvas/Graphs.
            </summary>
            <param name="runner"></param>
            <param name="parent">Generated FusionStats component and GameObject will be added as a child of this transform.</param>
            <param name="objectLayout">Uses a predefined position.</param>
            <param name="netStatsMask">The network stats to be enabled. If left null, default statistics will be used.</param>
            <param name="simStatsMask">The simulation stats to be enabled. If left null, default statistics will be used.</param>
            <returns></returns>
        </member>
        <member name="F:FusionStats.DefaultSimStatsMask">
            <summary>
            The gets the default SimStats. Some are only intended for Fusion internal development and aren't useful to users.
            </summary>
        </member>
        <member name="F:FusionStats.RedrawInterval">
            <summary>
            Interval (in seconds) between Graph redraws. Higher values (longer intervals) reduce CPU overhead, draw calls and garbage collection. 
            </summary>
        </member>
        <member name="F:FusionStats._canvasType">
            <summary>
            Selects between displaying Canvas as screen overlay, or a world GameObject.
            </summary>
        </member>
        <member name="P:FusionStats.CanvasType">
            <summary>
            Selects between displaying Canvas as screen overlay, or a world GameObject.
            </summary>
        </member>
        <member name="F:FusionStats._showButtonLabels">
            <summary>
            Enables text labels for the control buttons.
            </summary>
        </member>
        <member name="P:FusionStats.ShowButtonLabels">
            <summary>
            Enables text labels for the control buttons.
            </summary>
        </member>
        <member name="F:FusionStats._maxHeaderHeight">
            <summary>
            Height of button region at top of the stats panel. Values less than or equal to 0 hide the buttons, and reduce the header size.
            </summary>
        </member>
        <member name="P:FusionStats.MaxHeaderHeight">
            <summary>
            Height of button region at top of the stats panel. Values less than or equal to 0 hide the buttons, and reduce the header size.
            </summary>
        </member>
        <member name="F:FusionStats.CanvasScale">
            <summary>
             The size of the canvas when <see cref="P:FusionStats.CanvasType"/> is set to <see cref="F:FusionStats.StatCanvasTypes.GameObject"/>.
            </summary>
        </member>
        <member name="F:FusionStats.CanvasDistance">
            <summary>
            The distance on the Z axis the canvas will be positioned. Allows moving the canvas in front of or behind the parent GameObject.
            </summary>
        </member>
        <member name="F:FusionStats._gameObjectRect">
            <summary>
            The Rect which defines the position of the stats canvas on a GameObject. Sizes are normalized percentages.(ranges of 0f-1f).
            </summary>
        </member>
        <member name="F:FusionStats._overlayRect">
            <summary>
            The Rect which defines the position of the stats canvas overlay on the screen. Sizes are normalized percentages.(ranges of 0f-1f).
            </summary>
        </member>
        <member name="F:FusionStats._defaultLayout">
            <summary>
            <see cref="T:FusionGraph.Layouts"/> value which all child <see cref="T:FusionGraph"/> components will use if their <see cref="T:FusionGraph.Layouts"/> value is set to Auto.
            </summary>
        </member>
        <member name="F:FusionStats._noTextOverlap">
            <summary>
            UI Text on FusionGraphs can only overlay the bar graph if the canvas is perfectly facing the camera. 
            Any other angles will result in ZBuffer fighting between the text and the graph bar shader.
            For uses where perfect camera billboarding is not possible (such as VR), this toggle prevents FusionGraph layouts being used where text and graphs overlap.
            Normally leave this unchecked, unless you are experiencing corrupted text rendering.
            </summary>
        </member>
        <member name="F:FusionStats._noGraphShader">
            <summary>
            Disables the bar graph in <see cref="T:FusionGraph"/>, and uses a text only layout.
            Enable this if <see cref="T:FusionGraph"/> is not rendering correctly in VR.
            </summary>
        </member>
        <member name="F:FusionStats.GraphColumnCount">
            <summary>
            Force graphs layout to use X number of columns.
            </summary>
        </member>
        <member name="F:FusionStats._graphMaxWidth">
            <summary>
            If <see cref="F:FusionStats.GraphColumnCount"/> is set to zero, then columns will automatically be added as needed to limit graphs to this width or less.
            </summary>
        </member>
        <member name="P:FusionStats.GraphMaxWidth">
            <summary>
            If <see cref="F:FusionStats.GraphColumnCount"/> is set to zero, then columns will automatically be added as needed to limit graphs to this width or less.
            </summary>
        </member>
        <member name="F:FusionStats._enableObjectStats">
            <summary>
            Enables/Disables all NetworkObject related elements.
            </summary>
        </member>
        <member name="F:FusionStats._object">
            <summary>
            The <see cref="T:Fusion.NetworkObject"/> source for any <see cref="T:Fusion.Simulation.Statistics.ObjStats"/> specific telemetry.
            </summary>
        </member>
        <member name="F:FusionStats._objectTitleHeight">
            <summary>
            Height of Object title region at top of the stats panel.
            </summary>
        </member>
        <member name="F:FusionStats._objectIdsHeight">
            <summary>
            Height of Object info region at top of the stats panel.
            </summary>
        </member>
        <member name="F:FusionStats._objectMetersHeight">
            <summary>
            Height of Object info region at top of the stats panel.
            </summary>
        </member>
        <member name="F:FusionStats._runner">
            <summary>
            The <see cref="T:Fusion.NetworkRunner"/> currently associated with this <see cref="T:FusionStats"/> component and graphs.
            </summary>
        </member>
        <member name="F:FusionStats.InitializeAllGraphs">
            <summary>
            Initializes a <see cref="T:FusionGraph"/> for all available stats, even if not initially included. 
            If disabled, graphs added after initialization will be added to the bottom of the interface stack.
            </summary>
        </member>
        <member name="F:FusionStats.ConnectTo">
            <summary>
            When <see cref="F:FusionStats._runner"/> is null and no <see cref="T:Fusion.NetworkRunner"/> exists in the current scene, FusionStats will continuously attempt to find and connect to an active <see cref="T:Fusion.NetworkRunner"/> which matches these indicated modes.
            </summary>
        </member>
        <member name="F:FusionStats._includedObjStats">
            <summary>
            Selects which NetworkObject stats should be displayed.
            </summary>
        </member>
        <member name="F:FusionStats._includedNetStats">
            <summary>
            Selects which NetConnection stats should be displayed.
            </summary>
        </member>
        <member name="F:FusionStats._includedSimStats">
            <summary>
            Selects which Simulation stats should be displayed.
            </summary>
        </member>
        <member name="F:FusionStats.AutoDestroy">
            <summary>
            Automatically destroys this <see cref="T:FusionStats"/> GameObject if the associated runner is null or inactive.
            Otherwise attempts will continuously be made to find an new active runner which is running in <see cref="T:Fusion.SimulationModes"/> specified by <see cref="F:FusionStats.ConnectTo"/>, and connect to that.
            </summary>
        </member>
        <member name="F:FusionStats.EnforceSingle">
            <summary>
            Only one instance with the <see cref="F:FusionStats.Guid"/> can exist. Will destroy any clones on Awake.
            </summary>
        </member>
        <member name="F:FusionStats.Guid">
            <summary>
            Identifier used to enforce single instances of <see cref="T:FusionStats"/> when running in Multi-Peer mode. 
            When <see cref="F:FusionStats.EnforceSingle"/> is enabled, only one instance of <see cref="T:FusionStats"/> with this GUID will be active at any time,
            regardless of the total number of peers running.
            </summary>
        </member>
        <member name="F:FusionStats._modifyColors">
            <summary>
            Shows/hides controls in the inspector for defining element colors.
            </summary>
        </member>
        <member name="F:FusionStats._graphColorGood">
            <summary>
            The color used for the telemetry graph data.
            </summary>
        </member>
        <member name="F:FusionStats._graphColorWarn">
            <summary>
            The color used for the telemetry graph data.
            </summary>
        </member>
        <member name="F:FusionStats._graphColorBad">
            <summary>
            The color used for the telemetry graph data.
            </summary>
        </member>
        <member name="F:FusionStats._graphColorFlag">
            <summary>
            The color used for the telemetry graph data.
            </summary>
        </member>
        <member name="T:NetworkDebugStartGUI">
            <summary>
            Companion component for <see cref="T:NetworkDebugStart"/>. Automatically added as needed for rendering in-game networking IMGUI.
            </summary>
        </member>
        <member name="F:NetworkDebugStartGUI.EnableHotkeys">
            <summary>
            When enabled, the in-game user interface buttons can be activated with the keys H (Host), S (Server) and C (Client).
            </summary>
        </member>
        <member name="F:NetworkDebugStartGUI.BaseSkin">
            <summary>
            The GUISkin to use as the base for the scalable in-game UI.
            </summary>
        </member>
        <member name="T:NetworkDebugStart">
            <summary>
            A Fusion prototyping class for starting up basic networking. Add this component to your startup scene, and supply a <see cref="F:NetworkDebugStart.RunnerPrefab"/>.
            Can be set to automatically startup the network, display an in-game menu, or allow simplified start calls like <see cref="M:NetworkDebugStart.StartHost"/>.
            </summary>
        </member>
        <member name="T:NetworkDebugStart.StartModes">
            <summary>
            Selection for how <see cref="T:NetworkDebugStart"/> will behave at startup.
            </summary>
        </member>
        <member name="T:NetworkDebugStart.Stage">
            <summary>
            The current stage of connection or shutdown.
            </summary>
        </member>
        <member name="F:NetworkDebugStart.RunnerPrefab">
            <summary>
            Supply a Prefab or a scene object which has the <see cref="T:Fusion.NetworkRunner"/> component on it, 
            as well as any runner dependent components which implement <see cref="T:Fusion.INetworkRunnerCallbacks"/>, 
            such as <see cref="T:Fusion.NetworkEvents"/> or your own custom INetworkInput implementations.
            </summary>
        </member>
        <member name="F:NetworkDebugStart.StartMode">
            <summary>
            Select how network startup will be triggered. Automatically, by in-game menu selection, or exclusively by script.
            </summary>
        </member>
        <member name="F:NetworkDebugStart.AutoStartAs">
            <summary>
            When <see cref="F:NetworkDebugStart.StartMode"/> is set to <see cref="F:NetworkDebugStart.StartModes.Automatic"/>, this option selects if the <see cref="T:Fusion.NetworkRunner"/> 
            will be started as a dedicated server, or as a host (which is a server with a local player).
            </summary>
        </member>
        <member name="F:NetworkDebugStart.AutoHideGUI">
            <summary>
            <see cref="T:NetworkDebugStartGUI"/> will not render GUI elements while <see cref="P:NetworkDebugStart.CurrentStage"/> == <see cref="F:NetworkDebugStart.Stage.AllConnected"/>.
            </summary>
        </member>
        <member name="F:NetworkDebugStart.AutoClients">
            <summary>
            The number of client <see cref="T:Fusion.NetworkRunner"/> instances that will be created if running in Mulit-Peer Mode. 
            When using the Select start mode, this number will be the default value for the additional clients option box.
            </summary>
        </member>
        <member name="F:NetworkDebugStart.ServerPort">
            <summary>
            The port that server/host <see cref="T:Fusion.NetworkRunner"/> will use.
            </summary>
        </member>
        <member name="F:NetworkDebugStart.DefaultRoomName">
            <summary>
            The default room name to use when connecting to photon cloud.
            </summary>
        </member>
        <member name="F:NetworkDebugStart.AlwaysShowStats">
            <summary>
            Will automatically enable <see cref="T:FusionStats"/> once peers have finished connecting.
            </summary>
        </member>
        <member name="F:NetworkDebugStart.InitialScenePath">
            <summary>
            The Scene that will be loaded after network shutdown completes (all peers have disconnected). 
            If this field is null or invalid, will be set to the current scene when <see cref="T:NetworkDebugStart"/> runs Awake().
            </summary>
        </member>
        <member name="F:NetworkDebugStart._currentStage">
            <summary>
            Indicates which step of the startup process <see cref="T:NetworkDebugStart"/> is currently in.
            </summary>
        </member>
        <member name="P:NetworkDebugStart.CurrentStage">
            <summary>
            Indicates which step of the startup process <see cref="T:NetworkDebugStart"/> is currently in.
            </summary>
        </member>
        <member name="P:NetworkDebugStart.LastCreatedClientIndex">
            <summary>
            The index number used for the last created peer.
            </summary>
        </member>
        <member name="P:NetworkDebugStart.CurrentServerMode">
            <summary>
            The server mode that was used for initial startup. Used to inform UI which client modes should be available.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartSinglePlayer">
            <summary>
            Start a single player instance.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartServer">
            <summary>
            Start a server instance.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartHost">
            <summary>
            Start a host instance. This is a server instance, with a local player.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartClient">
            <summary>
            Start a client instance.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartServerPlusClients">
            <summary>
            Start a Fusion server instance, and the number of client instances indicated by <see cref="F:NetworkDebugStart.AutoClients"/>. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartHostPlusClients">
            <summary>
            Start a Fusion host instance, and the number of client instances indicated by <see cref="F:NetworkDebugStart.AutoClients"/>. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartServerPlusClients(System.Int32)">
            <summary>
            Start a Fusion server instance, and the indicated number of client instances. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartHostPlusClients(System.Int32)">
            <summary>
            Start a Fusion host instance (server with local player), and the indicated number of additional client instances. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartMultipleClients(System.Int32)">
            <summary>
            Start a Fusion host instance (server with local player), and the indicated number of additional client instances. 
            InstanceMode must be set to Multi-Peer mode, as this requires multiple <see cref="T:Fusion.NetworkRunner"/> instances.
            </summary>
        </member>
        <member name="M:NetworkDebugStart.StartMultipleSharedClients(System.Int32)">
            <summary>
            Start as Room on the Photon cloud, and connects as one or more clients.
            </summary>
            <param name="clientCount"></param>
        </member>
        <member name="T:FusionScalableIMGUI">
            <summary>
            In-Game IMGUI style used for the <see cref="T:NetworkDebugStartGUI"/> interface.
            </summary>
        </member>
        <member name="M:FusionScalableIMGUI.GetScaledSkin(UnityEngine.GUISkin,System.Single@,System.Single@,System.Int32@,System.Int32@,System.Single@)">
            <summary>
            Get the custom scalable skin, already resized to the current screen. Provides the height, width, padding and margin used.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FusionScalableIMGUI.ScaleGuiSkinToScreenHeight">
            <summary>
            Modifies a skin to make it scale with screen height.
            </summary>
            <param name="skin"></param>
            <returns>Returns (height, width, padding, top-margin, left-box-margin) values applied to the GuiSkin</returns>
        </member>
        <member name="T:FusionGraph">
            <summary>
            Individual graph components generated and used by <see cref="T:FusionStats"/>.
            </summary>
        </member>
        <member name="F:FusionGraph._layout">
            <summary>
            Select between automatic formating (based on size and aspect ratio of the graph) and manual selection of the various graph layouts available.
            </summary>
        </member>
        <member name="F:FusionGraph._showGraph">
            <summary>
            Controls if the graph shader will render. Currently the graph shader only works in Overlay mode, so if forced to show Always here, it will not render correctly in 3d space.
            </summary>
        </member>
        <member name="F:FusionGraph.Padding">
            <summary>
            Padding added to text and other layout objects.
            </summary>
        </member>
        <member name="F:FusionGraph._alwaysExpandGraph">
            <summary>
            The graph shaded area (which is only visible in Overlay mode) will expand to the full extends of the <see cref="T:FusionGraph"/> component when this is enabled, regardless of size.
            When false, the graph will automatically expand only as needed.
            </summary>
        </member>
        <member name="F:FusionGraph._showUITargets">
            <summary>
            Exposes the UI labels and controls of <see cref="T:FusionGraph"/>, so they may be modified if customizing this graph.
            </summary>
        </member>
        <member name="M:FusionGraph.Refresh">
            <summary>
            Returns true if the graph rendered. False if the size was too small and the graph was hidden.
            </summary>
            <returns></returns>
        </member>
        <member name="M:FusionGraph.Create(FusionStats,Fusion.Simulation.Statistics.StatSourceTypes,System.Int32,UnityEngine.RectTransform)">
            <summary>
            Creates a new GameObject with <see cref="T:FusionGraph"/> and attaches it to the specified parent.
            </summary>
        </member>
        <member name="M:FusionGraph.Generate(Fusion.Simulation.Statistics.StatSourceTypes,System.Int32,UnityEngine.RectTransform)">
            <summary>
            Generates the Graph UI for this <see cref="T:FusionGraph"/>.
            </summary>
        </member>
    </members>
</doc>
