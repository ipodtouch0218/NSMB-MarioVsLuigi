// <auto-generated>
// This code was auto-generated by a tool, every time
// the tool executes this code will be reset.
//
// If you need to extend the classes generated to add
// fields or methods to them, please create partial
// declarations in another file.
// </auto-generated>
#pragma warning disable 0109
#pragma warning disable 1591


namespace Quantum {
  using Photon.Deterministic;
  using Quantum;
  using Quantum.Core;
  using Quantum.Collections;
  using Quantum.Inspector;
  using Quantum.Physics2D;
  using Quantum.Physics3D;
  using Byte = System.Byte;
  using SByte = System.SByte;
  using Int16 = System.Int16;
  using UInt16 = System.UInt16;
  using Int32 = System.Int32;
  using UInt32 = System.UInt32;
  using Int64 = System.Int64;
  using UInt64 = System.UInt64;
  using Boolean = System.Boolean;
  using String = System.String;
  using Object = System.Object;
  using FlagsAttribute = System.FlagsAttribute;
  using SerializableAttribute = System.SerializableAttribute;
  using MethodImplAttribute = System.Runtime.CompilerServices.MethodImplAttribute;
  using MethodImplOptions = System.Runtime.CompilerServices.MethodImplOptions;
  using FieldOffsetAttribute = System.Runtime.InteropServices.FieldOffsetAttribute;
  using StructLayoutAttribute = System.Runtime.InteropServices.StructLayoutAttribute;
  using LayoutKind = System.Runtime.InteropServices.LayoutKind;
  #if QUANTUM_UNITY //;
  using TooltipAttribute = UnityEngine.TooltipAttribute;
  using HeaderAttribute = UnityEngine.HeaderAttribute;
  using SpaceAttribute = UnityEngine.SpaceAttribute;
  using RangeAttribute = UnityEngine.RangeAttribute;
  using HideInInspectorAttribute = UnityEngine.HideInInspector;
  using PreserveAttribute = UnityEngine.Scripting.PreserveAttribute;
  using FormerlySerializedAsAttribute = UnityEngine.Serialization.FormerlySerializedAsAttribute;
  using MovedFromAttribute = UnityEngine.Scripting.APIUpdating.MovedFromAttribute;
  using CreateAssetMenu = UnityEngine.CreateAssetMenuAttribute;
  using RuntimeInitializeOnLoadMethodAttribute = UnityEngine.RuntimeInitializeOnLoadMethodAttribute;
  #endif //;
  
  public unsafe partial class Frame {
    public unsafe partial struct FrameEvents {
      static partial void GetEventTypeCountCodeGen(ref Int32 eventCount) {
        eventCount = 43;
      }
      static partial void GetParentEventIDCodeGen(Int32 eventID, ref Int32 parentEventID) {
        switch (eventID) {
          default: break;
        }
      }
      static partial void GetEventTypeCodeGen(Int32 eventID, ref System.Type result) {
        switch (eventID) {
          case EventMarioPlayerCollectedStar.ID: result = typeof(EventMarioPlayerCollectedStar); return;
          case EventEntityBlockBumped.ID: result = typeof(EventEntityBlockBumped); return;
          case EventBobombLit.ID: result = typeof(EventBobombLit); return;
          case EventBobombExploded.ID: result = typeof(EventBobombExploded); return;
          case EventBooBecomeActive.ID: result = typeof(EventBooBecomeActive); return;
          case EventBreakableObjectBroken.ID: result = typeof(EventBreakableObjectBroken); return;
          case EventMarioPlayerCollectedCoin.ID: result = typeof(EventMarioPlayerCollectedCoin); return;
          case EventCoinChangedType.ID: result = typeof(EventCoinChangedType); return;
          case EventCoinChangeCollected.ID: result = typeof(EventCoinChangeCollected); return;
          case EventCoinBounced.ID: result = typeof(EventCoinBounced); return;
          case EventEnemyDespawned.ID: result = typeof(EventEnemyDespawned); return;
          case EventEnemyKilled.ID: result = typeof(EventEnemyKilled); return;
          case EventPlayComboSound.ID: result = typeof(EventPlayComboSound); return;
          case EventPlayBumpSound.ID: result = typeof(EventPlayBumpSound); return;
          case EventGameStateChanged.ID: result = typeof(EventGameStateChanged); return;
          case EventKoopaEnteredShell.ID: result = typeof(EventKoopaEnteredShell); return;
          case EventLiquidSplashed.ID: result = typeof(EventLiquidSplashed); return;
          case EventMarioPlayerJumped.ID: result = typeof(EventMarioPlayerJumped); return;
          case EventMarioPlayerGroundpoundStarted.ID: result = typeof(EventMarioPlayerGroundpoundStarted); return;
          case EventMarioPlayerGroundpounded.ID: result = typeof(EventMarioPlayerGroundpounded); return;
          case EventMarioPlayerCrouched.ID: result = typeof(EventMarioPlayerCrouched); return;
          case EventMarioPlayerCollectedPowerup.ID: result = typeof(EventMarioPlayerCollectedPowerup); return;
          case EventMarioPlayerUsedReserveItem.ID: result = typeof(EventMarioPlayerUsedReserveItem); return;
          case EventMarioPlayerWalljumped.ID: result = typeof(EventMarioPlayerWalljumped); return;
          case EventMarioPlayerShotProjectile.ID: result = typeof(EventMarioPlayerShotProjectile); return;
          case EventMarioPlayerUsedPropeller.ID: result = typeof(EventMarioPlayerUsedPropeller); return;
          case EventMarioPlayerPropellerSpin.ID: result = typeof(EventMarioPlayerPropellerSpin); return;
          case EventMarioPlayerDied.ID: result = typeof(EventMarioPlayerDied); return;
          case EventMarioPlayerTookDamage.ID: result = typeof(EventMarioPlayerTookDamage); return;
          case EventMarioPlayerPreRespawned.ID: result = typeof(EventMarioPlayerPreRespawned); return;
          case EventMarioPlayerRespawned.ID: result = typeof(EventMarioPlayerRespawned); return;
          case EventMarioPlayerPickedUpObject.ID: result = typeof(EventMarioPlayerPickedUpObject); return;
          case EventMarioPlayerThrewObject.ID: result = typeof(EventMarioPlayerThrewObject); return;
          case EventMarioPlayerMegaStart.ID: result = typeof(EventMarioPlayerMegaStart); return;
          case EventMarioPlayerMegaEnd.ID: result = typeof(EventMarioPlayerMegaEnd); return;
          case EventMarioPlayerReceivedKnockback.ID: result = typeof(EventMarioPlayerReceivedKnockback); return;
          case EventMarioPlayerEnteredPipe.ID: result = typeof(EventMarioPlayerEnteredPipe); return;
          case EventPowerupBecameActive.ID: result = typeof(EventPowerupBecameActive); return;
          case EventProjectileDestroyed.ID: result = typeof(EventProjectileDestroyed); return;
          case EventTileChanged.ID: result = typeof(EventTileChanged); return;
          case EventTileBroken.ID: result = typeof(EventTileBroken); return;
          case EventTimerExpired.ID: result = typeof(EventTimerExpired); return;
          default: break;
        }
      }
      public EventMarioPlayerCollectedStar MarioPlayerCollectedStar(Frame Frame, EntityRef Entity, MarioPlayer Mario, FPVector2 Position) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventMarioPlayerCollectedStar>(EventMarioPlayerCollectedStar.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        ev.Position = Position;
        _f.AddEvent(ev);
        return ev;
      }
      public EventEntityBlockBumped EntityBlockBumped(Frame Frame, EntityRef Entity) {
        var ev = _f.Context.AcquireEvent<EventEntityBlockBumped>(EventEntityBlockBumped.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventBobombLit BobombLit(Frame Frame, EntityRef Entity, QBoolean Stomped) {
        var ev = _f.Context.AcquireEvent<EventBobombLit>(EventBobombLit.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Stomped = Stomped;
        _f.AddEvent(ev);
        return ev;
      }
      public EventBobombExploded BobombExploded(Frame Frame, EntityRef Entity) {
        var ev = _f.Context.AcquireEvent<EventBobombExploded>(EventBobombExploded.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventBooBecomeActive BooBecomeActive(Frame Frame, EntityRef Entity) {
        var ev = _f.Context.AcquireEvent<EventBooBecomeActive>(EventBooBecomeActive.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventBreakableObjectBroken BreakableObjectBroken(Frame Frame, EntityRef Entity, EntityRef Cause, FPVector2 LaunchDirection, FP Height) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventBreakableObjectBroken>(EventBreakableObjectBroken.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Cause = Cause;
        ev.LaunchDirection = LaunchDirection;
        ev.Height = Height;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerCollectedCoin MarioPlayerCollectedCoin(Frame Frame, EntityRef Entity, MarioPlayer Mario, Byte Coins, QBoolean ItemSpawned, FPVector2 CoinLocation, QBoolean CoinFromBlock, QBoolean Downwards) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventMarioPlayerCollectedCoin>(EventMarioPlayerCollectedCoin.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        ev.Coins = Coins;
        ev.ItemSpawned = ItemSpawned;
        ev.CoinLocation = CoinLocation;
        ev.CoinFromBlock = CoinFromBlock;
        ev.Downwards = Downwards;
        _f.AddEvent(ev);
        return ev;
      }
      public EventCoinChangedType CoinChangedType(Frame Frame, EntityRef Entity, Coin Coin) {
        var ev = _f.Context.AcquireEvent<EventCoinChangedType>(EventCoinChangedType.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Coin = Coin;
        _f.AddEvent(ev);
        return ev;
      }
      public EventCoinChangeCollected CoinChangeCollected(Frame Frame, EntityRef Entity, Coin Coin, QBoolean Collected) {
        var ev = _f.Context.AcquireEvent<EventCoinChangeCollected>(EventCoinChangeCollected.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Coin = Coin;
        ev.Collected = Collected;
        _f.AddEvent(ev);
        return ev;
      }
      public EventCoinBounced CoinBounced(Frame Frame, EntityRef Entity, Coin Coin) {
        var ev = _f.Context.AcquireEvent<EventCoinBounced>(EventCoinBounced.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Coin = Coin;
        _f.AddEvent(ev);
        return ev;
      }
      public EventEnemyDespawned EnemyDespawned(Frame Frame, EntityRef Entity) {
        var ev = _f.Context.AcquireEvent<EventEnemyDespawned>(EventEnemyDespawned.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventEnemyKilled EnemyKilled(Frame Frame, EntityRef Enemy, EntityRef Killer, QBoolean IsSpecialKill) {
        var ev = _f.Context.AcquireEvent<EventEnemyKilled>(EventEnemyKilled.ID);
        ev.Frame = Frame;
        ev.Enemy = Enemy;
        ev.Killer = Killer;
        ev.IsSpecialKill = IsSpecialKill;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayComboSound PlayComboSound(Frame Frame, EntityRef Entity, Byte Combo) {
        var ev = _f.Context.AcquireEvent<EventPlayComboSound>(EventPlayComboSound.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Combo = Combo;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPlayBumpSound PlayBumpSound(Frame Frame, EntityRef Entity) {
        var ev = _f.Context.AcquireEvent<EventPlayBumpSound>(EventPlayBumpSound.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventGameStateChanged GameStateChanged(Frame Frame, GameState NewState) {
        var ev = _f.Context.AcquireEvent<EventGameStateChanged>(EventGameStateChanged.ID);
        ev.Frame = Frame;
        ev.NewState = NewState;
        _f.AddEvent(ev);
        return ev;
      }
      public EventKoopaEnteredShell KoopaEnteredShell(Frame Frame, EntityRef Entity) {
        var ev = _f.Context.AcquireEvent<EventKoopaEnteredShell>(EventKoopaEnteredShell.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventLiquidSplashed LiquidSplashed(EntityRef Entity, FP Force, FPVector2 Position, QBoolean Exit) {
        var ev = _f.Context.AcquireEvent<EventLiquidSplashed>(EventLiquidSplashed.ID);
        ev.Entity = Entity;
        ev.Force = Force;
        ev.Position = Position;
        ev.Exit = Exit;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerJumped MarioPlayerJumped(Frame Frame, EntityRef Entity, MarioPlayer Mario, JumpState JumpState, QBoolean WasBounce) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerJumped>(EventMarioPlayerJumped.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        ev.JumpState = JumpState;
        ev.WasBounce = WasBounce;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerGroundpoundStarted MarioPlayerGroundpoundStarted(Frame Frame, EntityRef Entity, MarioPlayer Mario) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerGroundpoundStarted>(EventMarioPlayerGroundpoundStarted.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerGroundpounded MarioPlayerGroundpounded(Frame Frame, EntityRef Entity, MarioPlayer Mario) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerGroundpounded>(EventMarioPlayerGroundpounded.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerCrouched MarioPlayerCrouched(Frame Frame, EntityRef Entity, MarioPlayer Mario) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerCrouched>(EventMarioPlayerCrouched.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerCollectedPowerup MarioPlayerCollectedPowerup(Frame Frame, EntityRef Entity, MarioPlayer Mario, PowerupReserveResult Result, PowerupAsset Scriptable) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventMarioPlayerCollectedPowerup>(EventMarioPlayerCollectedPowerup.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        ev.Result = Result;
        ev.Scriptable = Scriptable;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerUsedReserveItem MarioPlayerUsedReserveItem(Frame Frame, EntityRef Entity, MarioPlayer Mario, QBoolean Success) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerUsedReserveItem>(EventMarioPlayerUsedReserveItem.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        ev.Success = Success;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerWalljumped MarioPlayerWalljumped(Frame Frame, EntityRef Entity, MarioPlayer Mario, FPVector2 Position, QBoolean WasOnRightWall) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerWalljumped>(EventMarioPlayerWalljumped.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        ev.Position = Position;
        ev.WasOnRightWall = WasOnRightWall;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerShotProjectile MarioPlayerShotProjectile(Frame Frame, EntityRef Entity, MarioPlayer Mario, Projectile Projectile) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerShotProjectile>(EventMarioPlayerShotProjectile.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        ev.Projectile = Projectile;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerUsedPropeller MarioPlayerUsedPropeller(Frame Frame, EntityRef Entity, MarioPlayer Mario) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerUsedPropeller>(EventMarioPlayerUsedPropeller.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerPropellerSpin MarioPlayerPropellerSpin(Frame Frame, EntityRef Entity, MarioPlayer Mario) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerPropellerSpin>(EventMarioPlayerPropellerSpin.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerDied MarioPlayerDied(Frame Frame, EntityRef Entity, MarioPlayer Mario) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventMarioPlayerDied>(EventMarioPlayerDied.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerTookDamage MarioPlayerTookDamage(Frame Frame, EntityRef Entity, MarioPlayer Mario) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventMarioPlayerTookDamage>(EventMarioPlayerTookDamage.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerPreRespawned MarioPlayerPreRespawned(Frame Frame, EntityRef Entity, MarioPlayer Mario) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerPreRespawned>(EventMarioPlayerPreRespawned.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerRespawned MarioPlayerRespawned(Frame Frame, EntityRef Entity, MarioPlayer Mario) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerRespawned>(EventMarioPlayerRespawned.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerPickedUpObject MarioPlayerPickedUpObject(Frame Frame, EntityRef Entity, MarioPlayer* Mario, EntityRef OtherEntity) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerPickedUpObject>(EventMarioPlayerPickedUpObject.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        ev.OtherEntity = OtherEntity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerThrewObject MarioPlayerThrewObject(Frame Frame, EntityRef Entity, MarioPlayer* Mario, EntityRef OtherEntity) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerThrewObject>(EventMarioPlayerThrewObject.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Mario = Mario;
        ev.OtherEntity = OtherEntity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerMegaStart MarioPlayerMegaStart(Frame Frame, EntityRef Entity) {
        if (_f.IsPredicted) return null;
        var ev = _f.Context.AcquireEvent<EventMarioPlayerMegaStart>(EventMarioPlayerMegaStart.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerMegaEnd MarioPlayerMegaEnd(Frame Frame, EntityRef Entity, QBoolean Cancelled) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerMegaEnd>(EventMarioPlayerMegaEnd.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Cancelled = Cancelled;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerReceivedKnockback MarioPlayerReceivedKnockback(Frame Frame, EntityRef Entity, EntityRef Attacker, QBoolean Weak) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerReceivedKnockback>(EventMarioPlayerReceivedKnockback.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Attacker = Attacker;
        ev.Weak = Weak;
        _f.AddEvent(ev);
        return ev;
      }
      public EventMarioPlayerEnteredPipe MarioPlayerEnteredPipe(Frame Frame, EntityRef Entity, EntityRef Pipe) {
        var ev = _f.Context.AcquireEvent<EventMarioPlayerEnteredPipe>(EventMarioPlayerEnteredPipe.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Pipe = Pipe;
        _f.AddEvent(ev);
        return ev;
      }
      public EventPowerupBecameActive PowerupBecameActive(Frame Frame, EntityRef Entity) {
        var ev = _f.Context.AcquireEvent<EventPowerupBecameActive>(EventPowerupBecameActive.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        _f.AddEvent(ev);
        return ev;
      }
      public EventProjectileDestroyed ProjectileDestroyed(Frame Frame, EntityRef Entity, ParticleEffect Particle, FPVector2 Position) {
        var ev = _f.Context.AcquireEvent<EventProjectileDestroyed>(EventProjectileDestroyed.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.Particle = Particle;
        ev.Position = Position;
        _f.AddEvent(ev);
        return ev;
      }
      public EventTileChanged TileChanged(Frame Frame, Int32 TileX, Int32 TileY, StageTileInstance NewTile) {
        var ev = _f.Context.AcquireEvent<EventTileChanged>(EventTileChanged.ID);
        ev.Frame = Frame;
        ev.TileX = TileX;
        ev.TileY = TileY;
        ev.NewTile = NewTile;
        _f.AddEvent(ev);
        return ev;
      }
      public EventTileBroken TileBroken(Frame Frame, EntityRef Entity, Int32 TileX, Int32 TileY, StageTileInstance Tile) {
        var ev = _f.Context.AcquireEvent<EventTileBroken>(EventTileBroken.ID);
        ev.Frame = Frame;
        ev.Entity = Entity;
        ev.TileX = TileX;
        ev.TileY = TileY;
        ev.Tile = Tile;
        _f.AddEvent(ev);
        return ev;
      }
      public EventTimerExpired TimerExpired(Frame Frame) {
        var ev = _f.Context.AcquireEvent<EventTimerExpired>(EventTimerExpired.ID);
        ev.Frame = Frame;
        _f.AddEvent(ev);
        return ev;
      }
    }
  }
  public unsafe partial class EventMarioPlayerCollectedStar : EventBase {
    public new const Int32 ID = 1;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    public FPVector2 Position;
    protected EventMarioPlayerCollectedStar(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerCollectedStar() : 
        base(1, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 41;
        hash = hash * 31 + Frame.GetHashCode();
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Mario.GetHashCode();
        hash = hash * 31 + Position.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventEntityBlockBumped : EventBase {
    public new const Int32 ID = 2;
    public Frame Frame;
    public EntityRef Entity;
    protected EventEntityBlockBumped(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventEntityBlockBumped() : 
        base(2, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 43;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventBobombLit : EventBase {
    public new const Int32 ID = 3;
    public Frame Frame;
    public EntityRef Entity;
    public QBoolean Stomped;
    protected EventBobombLit(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventBobombLit() : 
        base(3, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 47;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Stomped.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventBobombExploded : EventBase {
    public new const Int32 ID = 4;
    public Frame Frame;
    public EntityRef Entity;
    protected EventBobombExploded(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventBobombExploded() : 
        base(4, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 53;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventBooBecomeActive : EventBase {
    public new const Int32 ID = 5;
    public Frame Frame;
    public EntityRef Entity;
    protected EventBooBecomeActive(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventBooBecomeActive() : 
        base(5, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 59;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventBreakableObjectBroken : EventBase {
    public new const Int32 ID = 6;
    public Frame Frame;
    public EntityRef Entity;
    public EntityRef Cause;
    public FPVector2 LaunchDirection;
    public FP Height;
    protected EventBreakableObjectBroken(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventBreakableObjectBroken() : 
        base(6, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 61;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Cause.GetHashCode();
        hash = hash * 31 + Height.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerCollectedCoin : EventBase {
    public new const Int32 ID = 7;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    public Byte Coins;
    public QBoolean ItemSpawned;
    public FPVector2 CoinLocation;
    public QBoolean CoinFromBlock;
    public QBoolean Downwards;
    protected EventMarioPlayerCollectedCoin(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerCollectedCoin() : 
        base(7, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 67;
        hash = hash * 31 + Frame.GetHashCode();
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Mario.GetHashCode();
        hash = hash * 31 + Coins.GetHashCode();
        hash = hash * 31 + ItemSpawned.GetHashCode();
        hash = hash * 31 + CoinLocation.GetHashCode();
        hash = hash * 31 + CoinFromBlock.GetHashCode();
        hash = hash * 31 + Downwards.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventCoinChangedType : EventBase {
    public new const Int32 ID = 8;
    public Frame Frame;
    public EntityRef Entity;
    public Coin Coin;
    protected EventCoinChangedType(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventCoinChangedType() : 
        base(8, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 71;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventCoinChangeCollected : EventBase {
    public new const Int32 ID = 9;
    public Frame Frame;
    public EntityRef Entity;
    public Coin Coin;
    public QBoolean Collected;
    protected EventCoinChangeCollected(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventCoinChangeCollected() : 
        base(9, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 73;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Collected.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventCoinBounced : EventBase {
    public new const Int32 ID = 10;
    public Frame Frame;
    public EntityRef Entity;
    public Coin Coin;
    protected EventCoinBounced(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventCoinBounced() : 
        base(10, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 79;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventEnemyDespawned : EventBase {
    public new const Int32 ID = 11;
    public Frame Frame;
    public EntityRef Entity;
    protected EventEnemyDespawned(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventEnemyDespawned() : 
        base(11, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 83;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventEnemyKilled : EventBase {
    public new const Int32 ID = 12;
    public Frame Frame;
    public EntityRef Enemy;
    public EntityRef Killer;
    public QBoolean IsSpecialKill;
    protected EventEnemyKilled(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventEnemyKilled() : 
        base(12, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 89;
        hash = hash * 31 + Enemy.GetHashCode();
        hash = hash * 31 + Killer.GetHashCode();
        hash = hash * 31 + IsSpecialKill.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayComboSound : EventBase {
    public new const Int32 ID = 13;
    public Frame Frame;
    public EntityRef Entity;
    public Byte Combo;
    protected EventPlayComboSound(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayComboSound() : 
        base(13, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 97;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPlayBumpSound : EventBase {
    public new const Int32 ID = 14;
    public Frame Frame;
    public EntityRef Entity;
    protected EventPlayBumpSound(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPlayBumpSound() : 
        base(14, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 101;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventGameStateChanged : EventBase {
    public new const Int32 ID = 15;
    public Frame Frame;
    public GameState NewState;
    protected EventGameStateChanged(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventGameStateChanged() : 
        base(15, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 103;
        hash = hash * 31 + Frame.GetHashCode();
        hash = hash * 31 + NewState.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventKoopaEnteredShell : EventBase {
    public new const Int32 ID = 16;
    public Frame Frame;
    public EntityRef Entity;
    protected EventKoopaEnteredShell(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventKoopaEnteredShell() : 
        base(16, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 107;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventLiquidSplashed : EventBase {
    public new const Int32 ID = 17;
    public EntityRef Entity;
    public FP Force;
    public FPVector2 Position;
    public QBoolean Exit;
    protected EventLiquidSplashed(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventLiquidSplashed() : 
        base(17, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 109;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Exit.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerJumped : EventBase {
    public new const Int32 ID = 18;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    public JumpState JumpState;
    public QBoolean WasBounce;
    protected EventMarioPlayerJumped(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerJumped() : 
        base(18, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 113;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerGroundpoundStarted : EventBase {
    public new const Int32 ID = 19;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    protected EventMarioPlayerGroundpoundStarted(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerGroundpoundStarted() : 
        base(19, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 127;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerGroundpounded : EventBase {
    public new const Int32 ID = 20;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    protected EventMarioPlayerGroundpounded(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerGroundpounded() : 
        base(20, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 131;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerCrouched : EventBase {
    public new const Int32 ID = 21;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    protected EventMarioPlayerCrouched(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerCrouched() : 
        base(21, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 137;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerCollectedPowerup : EventBase {
    public new const Int32 ID = 22;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    public PowerupReserveResult Result;
    public PowerupAsset Scriptable;
    protected EventMarioPlayerCollectedPowerup(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerCollectedPowerup() : 
        base(22, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 139;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerUsedReserveItem : EventBase {
    public new const Int32 ID = 23;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    public QBoolean Success;
    protected EventMarioPlayerUsedReserveItem(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerUsedReserveItem() : 
        base(23, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 149;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerWalljumped : EventBase {
    public new const Int32 ID = 24;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    public FPVector2 Position;
    public QBoolean WasOnRightWall;
    protected EventMarioPlayerWalljumped(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerWalljumped() : 
        base(24, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 151;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerShotProjectile : EventBase {
    public new const Int32 ID = 25;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    public Projectile Projectile;
    protected EventMarioPlayerShotProjectile(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerShotProjectile() : 
        base(25, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 157;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerUsedPropeller : EventBase {
    public new const Int32 ID = 26;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    protected EventMarioPlayerUsedPropeller(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerUsedPropeller() : 
        base(26, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 163;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerPropellerSpin : EventBase {
    public new const Int32 ID = 27;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    protected EventMarioPlayerPropellerSpin(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerPropellerSpin() : 
        base(27, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 167;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerDied : EventBase {
    public new const Int32 ID = 28;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    protected EventMarioPlayerDied(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerDied() : 
        base(28, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 173;
        hash = hash * 31 + Frame.GetHashCode();
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Mario.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerTookDamage : EventBase {
    public new const Int32 ID = 29;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    protected EventMarioPlayerTookDamage(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerTookDamage() : 
        base(29, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 179;
        hash = hash * 31 + Frame.GetHashCode();
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Mario.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerPreRespawned : EventBase {
    public new const Int32 ID = 30;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    protected EventMarioPlayerPreRespawned(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerPreRespawned() : 
        base(30, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 181;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerRespawned : EventBase {
    public new const Int32 ID = 31;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer Mario;
    protected EventMarioPlayerRespawned(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerRespawned() : 
        base(31, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 191;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerPickedUpObject : EventBase {
    public new const Int32 ID = 32;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer* Mario;
    public EntityRef OtherEntity;
    protected EventMarioPlayerPickedUpObject(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerPickedUpObject() : 
        base(32, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 193;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + OtherEntity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerThrewObject : EventBase {
    public new const Int32 ID = 33;
    public Frame Frame;
    public EntityRef Entity;
    public MarioPlayer* Mario;
    public EntityRef OtherEntity;
    protected EventMarioPlayerThrewObject(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerThrewObject() : 
        base(33, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 197;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + OtherEntity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerMegaStart : EventBase {
    public new const Int32 ID = 34;
    public Frame Frame;
    public EntityRef Entity;
    protected EventMarioPlayerMegaStart(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerMegaStart() : 
        base(34, EventFlags.Server|EventFlags.Client|EventFlags.Synced) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 199;
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerMegaEnd : EventBase {
    public new const Int32 ID = 35;
    public Frame Frame;
    public EntityRef Entity;
    public QBoolean Cancelled;
    protected EventMarioPlayerMegaEnd(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerMegaEnd() : 
        base(35, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 211;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Cancelled.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerReceivedKnockback : EventBase {
    public new const Int32 ID = 36;
    public Frame Frame;
    public EntityRef Entity;
    public EntityRef Attacker;
    public QBoolean Weak;
    protected EventMarioPlayerReceivedKnockback(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerReceivedKnockback() : 
        base(36, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 223;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Attacker.GetHashCode();
        hash = hash * 31 + Weak.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventMarioPlayerEnteredPipe : EventBase {
    public new const Int32 ID = 37;
    public Frame Frame;
    public EntityRef Entity;
    public EntityRef Pipe;
    protected EventMarioPlayerEnteredPipe(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventMarioPlayerEnteredPipe() : 
        base(37, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 227;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Pipe.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventPowerupBecameActive : EventBase {
    public new const Int32 ID = 38;
    public Frame Frame;
    public EntityRef Entity;
    protected EventPowerupBecameActive(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventPowerupBecameActive() : 
        base(38, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 229;
        hash = hash * 31 + Frame.GetHashCode();
        hash = hash * 31 + Entity.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventProjectileDestroyed : EventBase {
    public new const Int32 ID = 39;
    public Frame Frame;
    public EntityRef Entity;
    public ParticleEffect Particle;
    public FPVector2 Position;
    protected EventProjectileDestroyed(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventProjectileDestroyed() : 
        base(39, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 233;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + Particle.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventTileChanged : EventBase {
    public new const Int32 ID = 40;
    public Frame Frame;
    public Int32 TileX;
    public Int32 TileY;
    public StageTileInstance NewTile;
    protected EventTileChanged(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventTileChanged() : 
        base(40, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 239;
        hash = hash * 31 + TileX.GetHashCode();
        hash = hash * 31 + TileY.GetHashCode();
        hash = hash * 31 + NewTile.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventTileBroken : EventBase {
    public new const Int32 ID = 41;
    public Frame Frame;
    public EntityRef Entity;
    public Int32 TileX;
    public Int32 TileY;
    public StageTileInstance Tile;
    protected EventTileBroken(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventTileBroken() : 
        base(41, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 241;
        hash = hash * 31 + Entity.GetHashCode();
        hash = hash * 31 + TileX.GetHashCode();
        hash = hash * 31 + TileY.GetHashCode();
        hash = hash * 31 + Tile.GetHashCode();
        return hash;
      }
    }
  }
  public unsafe partial class EventTimerExpired : EventBase {
    public new const Int32 ID = 42;
    public Frame Frame;
    protected EventTimerExpired(Int32 id, EventFlags flags) : 
        base(id, flags) {
    }
    public EventTimerExpired() : 
        base(42, EventFlags.Server|EventFlags.Client) {
    }
    public new QuantumGame Game {
      get {
        return (QuantumGame)base.Game;
      }
      set {
        base.Game = value;
      }
    }
    public override Int32 GetHashCode() {
      unchecked {
        var hash = 251;
        hash = hash * 31 + Frame.GetHashCode();
        return hash;
      }
    }
  }
}
#pragma warning restore 0109
#pragma warning restore 1591
