#define maxplayers 10

import enum PowerupState(byte);
import enum JumpState(byte);
import enum PowerupReserveResult(byte);

input {
	button Up;
	button Down;
	button Left;
	button Right;
	button Jump;
	button Sprint;
	button PowerupAction;
	button FireballPowerupAction;
	button PropellerPowerupAction;
}

component MarioPlayer {
    asset_ref<MarioPlayerPhysicsInfo> PhysicsAsset;
	asset_ref<CharacterAsset> CharacterAsset;
	PlayerRef PlayerRef;
	byte SpawnpointIndex;
	byte Team;

	PowerupState CurrentPowerupState;
	PowerupState PreviousPowerupState;
	asset_ref<PowerupAsset> ReserveItem;

	byte Stars;
	byte Coins;
	byte Lives;

	bool Disconnected;
	bool IsDead;
	bool FireDeath;
	bool IsRespawning;
	byte DeathAnimationFrames;
	byte PreRespawnFrames;
	byte RespawnFrames;
	byte NoLivesStarDirection;

	// Walk/Running
    bool FacingRight;
    bool IsSkidding;
    bool IsTurnaround;
    byte FastTurnaroundFrames;
    byte SlowTurnaroundFrames;

	// Jumping
	JumpState JumpState;
	JumpState PreviousJumpState;
    byte JumpLandingFrames;
	byte JumpBufferFrames;
	byte CoyoteTimeFrames;
	int LandedFrame;
	bool WasTouchingGroundLastFrame;
	bool DoEntityBounce;

	// Wallslide
	bool WallslideLeft;
	bool WallslideRight;
	byte WallslideEndFrames;
    byte WalljumpFrames;

	// Groundpound
    bool IsGroundpounding;
	bool IsGroundpoundActive;
	byte GroundpoundStartFrames;
	byte GroundpoundCooldownFrames;
	byte GroundpoundStandFrames;

	// Swimming
	byte WaterColliderCount;
	bool SwimExitForceJump;

	// Knockback
    bool IsInKnockback;
	bool IsInWeakKnockback;
	bool KnockbackWasOriginallyFacingRight;
	int KnockbackTick;
	byte DamageInvincibilityFrames;

	// Crouching
    bool IsCrouching;
    bool IsSliding;

	// Block Interactions
    bool IsSpinnerFlying;
	bool IsDrilling;

	// Powerups
	byte Combo;
    ushort InvincibilityFrames;
	
	byte MegaMushroomStartFrames;
	ushort MegaMushroomFrames;
	byte MegaMushroomEndFrames;
	bool MegaMushroomStationaryEnd;

	byte ProjectileDelayFrames;
	byte ProjectileVolleyFrames;
	byte CurrentProjectiles;
	byte CurrentVolley;

    bool IsInShell;
    byte ShellSlowdownFrames;

    bool IsPropellerFlying;
	byte PropellerLaunchFrames;
	byte PropellerSpinFrames;
	bool UsedPropellerThisJump;
	byte PropellerDrillCooldown;

    entity_ref HeldEntity;

    entity_ref CurrentPipe;
	FPVector2 PipeDirection;
	bool PipeEntering;
	byte PipeFrames;
	byte PipeCooldownFrames;
}

event MarioPlayerJumped {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
	nothashed JumpState JumpState;
	nothashed bool WasBounce;
}

event MarioPlayerGroundpoundStarted {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
}

event MarioPlayerGroundpounded {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
}

event MarioPlayerCrouched {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
}

synced event MarioPlayerCollectedPowerup {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
	nothashed PowerupReserveResult Result;
	nothashed PowerupAsset Scriptable;
}

event MarioPlayerUsedReserveItem {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
	nothashed bool Success;
}

event MarioPlayerWalljumped {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
	nothashed FPVector2 Position;
	nothashed bool WasOnRightWall;
}

event MarioPlayerShotProjectile {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
	nothashed Projectile Projectile;
}

event MarioPlayerUsedPropeller {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
}

event MarioPlayerPropellerSpin {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
}

synced event MarioPlayerDied {
	Frame Frame;
	entity_ref Entity;
	MarioPlayer Mario;
}

synced event MarioPlayerTookDamage {
	Frame Frame;
	entity_ref Entity;
	MarioPlayer Mario;
}

event MarioPlayerPreRespawned {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
}

event MarioPlayerRespawned {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer Mario;
}

event MarioPlayerPickedUpObject {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer* Mario;
	entity_ref OtherEntity;
}

event MarioPlayerThrewObject {
	nothashed Frame Frame;
	entity_ref Entity;
	nothashed MarioPlayer* Mario;
	entity_ref OtherEntity;
}

synced event MarioPlayerMegaStart {
	nothashed Frame Frame;
	entity_ref Entity;
}

event MarioPlayerMegaEnd {
	nothashed Frame Frame;
	entity_ref Entity;
	bool Cancelled;
}

event MarioPlayerReceivedKnockback {
	nothashed Frame Frame;
	entity_ref Entity;
	entity_ref Attacker;
	bool Weak;
}

event MarioPlayerEnteredPipe {
	nothashed Frame Frame;
	entity_ref Entity;
	entity_ref Pipe;
}